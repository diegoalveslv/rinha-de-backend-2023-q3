services:
  api1: # API - Instância 01
    image: docker.io/diegoalveslv/rinha-de-backend-2023-q3:latest
    container_name: rinha-api1
    hostname: rinha-api1
    network_mode: host
    depends_on:
      - postgres
    environment:
      DATASOURCE_URL: "jdbc:postgresql://localhost:5432/rinha"
      SERVER_PORT: 8081
      DATASOURCE_MAXIMUM_POOL_SIZE: 50
    deploy:
      resources:
        limits:
          cpus: '0.45'
          memory: '0.75GB'

  api2: # API - Instância 01
    image: docker.io/diegoalveslv/rinha-de-backend-2023-q3:latest
    container_name: rinha-api2
    hostname: rinha-api2
    network_mode: host
    depends_on:
      - postgres
    environment:
      DATASOURCE_URL: "jdbc:postgresql://localhost:5432/rinha"
      SERVER_PORT: 8082
      DATASOURCE_MAXIMUM_POOL_SIZE: 50
    deploy:
      resources:
        limits:
          cpus: '0.45'
          memory: '0.75GB'

  nginx: # Load Balancer
    image: nginx:latest
    container_name: rinha-nginx
    network_mode: host
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    deploy:
      resources:
        limits:
          cpus: '0.20'
          memory: '0.5GB'

  postgres: # Banco de dados
    image: postgres:16.3-alpine
    container_name: rinha-db
    network_mode: host
    environment:
      POSTGRES_DB: rinha
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      RINHA_SCHEMA: rinha
      RINHA_USER: rinha_user
      RINHA_PASSWORD: rinha_pass
    volumes:
      - ./init-database.sh:/docker-entrypoint-initdb.d/init-database.sh
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: '1.0GB'